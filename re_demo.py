# coding = UTF-8

import re

'''
正規表示式特殊序列
\A	只在字串開頭進行匹配。
\b	匹配位於開頭或者結尾的空字串
\B	匹配不位於開頭或者結尾的空字串
\d	匹配任意十進位制數，相當於 [0-9]
\D	匹配任意非數字字元，相當於 [^0-9]
\s	匹配任意空白字元，相當於 [ \t\n\r\f\v]
\S	匹配任意非空白字元，相當於 [^ \t\n\r\f\v]
\w	匹配任意數字和字母，相當於 [a-zA-Z0-9_]
\W	匹配任意非數字和字母的字元，相當於 [^a-zA-Z0-9_]
\Z	只在字串結尾進行匹配
'''
a = '一1二2三3四4五5六七八678九9'
b = "one1 two2 three3 four4 five5 six6 seven7 eight8 nine9 ten10"

bird = ("這是三十年前發生的一段真實故事，今天再重提它，仍然是記憶猶新。\n"
        "歷史就像似一片轉盤，三十年風水輪著轉。確實它曾以不同的面貌重複地出現，\n"
        "只不過是換個方式或轉個方向而已，如果再仔細分析其實質內容，仍然相當類似。\n"
        " \n"
        "話說三十年前，有一群港商，該形容它是個商業集團！\n"
        "很有計畫地在台灣演出一齣很成功的鳥戲。沒有人洞悉，也沒有人揭穿，\n"
        "整個故事過程有點像在變魔術一般，甚至不漏一點破綻，也不留下任何一點痕跡。\n"
        "在短短的兩年間，就能把帶來的五百萬美金變成兩參千萬抱走了。\n"
        "\n"
        "事情之經過蠻單純，沒什麼曲折更沒什麼花招，起先有一群港人來到台灣，\n"
        "到處收購文鳥和十姊妹，別的鳥他們一概不買，只買這兩種鳥。\n"
        "縱然再漂亮的如鸚鵡、八哥、藍鳥他們全都不要。倒不是說什麼價格他們都會接受，\n"
        "要在他們所界定的價格以下他們就會買。買下這些鳥到底是幹什麼？\n"
        "沒人知曉，也沒有人追究這些鳥被送到那兒去，只聽說是要外銷。也沒人去懷疑這種說辭。\n"
        "過沒多久，台北街頭道路的轉角處及菜市場的兩端，開始有人在擺攤賣鳥，\n"
        "賣的也只有這兩種鳥，文鳥和十姊妹。同時，他們也買鳥，比方說他賣的是一隻一百元，\n"
        "而他願向你買八十元，蠻合理的！只要你有這兩種鳥可以賣給他。\n"
       )

if bird.find(u'三十') != -1:
	bird = "三十" + bird.split(u"三十")[2]

print(bird)
'''
result[1] = "年前發生的一段真實故事，今天再重提它，仍然是記憶猶新。\n歷史就像似一片轉盤，"
result[2] = 
"年風水輪著轉。確實它曾以不同的面貌重複地出現，
只不過是換個方式或轉個方向而已，如果再仔細分析其實質內容，仍然相當類似。

話說"
'''


'''
compile1 = re.compile(u"八")
print(compile1.findall(bird))


re_findall_1 = re.findall(r"(\d)", a)
print(re_findall_1)
# result = ['1', '2', '3', '4', '5', '6', '7', '8', '9']

ret = re.findall(r'(\D)', a)
print(ret)
# result = ['一', '二', '三', '四', '五', '六', '七', '八', '九']

re_split = re.split("\d", a)
print(re_split)
# Result = ['一', '二', '三', '四', '五', '六七八', '', '', '九', '']

re_split_1 = re.findall("1.*x", b)
print(re_split_1)
# result = ['1 two2 three3 four4 five5 six']

re_compile = re.compile(r"\w*ne\w*")
print(re_compile.findall(b))
#result = ['one1', 'nine9']
'''